(** Generated by [c2ats-ats2] **)

(**  **)

typedef ALCdevice = $extype"ALCdevice"

typedef ALCcontext = $extype"ALCcontext"

typedef ALCboolean = $extype"ALCboolean"

typedef ALCchar = $extype"ALCchar"

typedef ALCbyte = $extype"ALCbyte"

typedef ALCubyte = $extype"ALCubyte"

typedef ALCshort = $extype"ALCshort"

typedef ALCushort = $extype"ALCushort"

typedef ALCint = $extype"ALCint"

typedef ALCuint = $extype"ALCuint"

typedef ALCsizei = $extype"ALCsizei"

typedef ALCenum = $extype"ALCenum"

typedef ALCfloat = $extype"ALCfloat"

typedef ALCdouble = $extype"ALCdouble"

typedef ALCvoid = $extype"ALCvoid"

fun alcCreateContext(cPtr0(ALCdevice), cPtr0(ALCint)) : cPtr0(ALCcontext) = "mac#"

fun alcMakeContextCurrent(cPtr0(ALCcontext)) : ALCboolean = "mac#"

fun alcProcessContext(cPtr0(ALCcontext)) : void = "mac#"

fun alcSuspendContext(cPtr0(ALCcontext)) : void = "mac#"

fun alcDestroyContext(cPtr0(ALCcontext)) : void = "mac#"

fun alcGetCurrentContext() : cPtr0(ALCcontext) = "mac#"

fun alcGetContextsDevice(cPtr0(ALCcontext)) : cPtr0(ALCdevice) = "mac#"

fun alcOpenDevice(cPtr0(ALCchar)) : cPtr0(ALCdevice) = "mac#"

fun alcCloseDevice(cPtr0(ALCdevice)) : ALCboolean = "mac#"

fun alcGetError(cPtr0(ALCdevice)) : ALCenum = "mac#"

fun alcIsExtensionPresent(cPtr0(ALCdevice), cPtr0(ALCchar)) : ALCboolean = "mac#"

fun alcGetProcAddress(cPtr0(ALCdevice), cPtr0(ALCchar)) : ptr = "mac#"

fun alcGetEnumValue(cPtr0(ALCdevice), cPtr0(ALCchar)) : ALCenum = "mac#"

fun alcGetString(cPtr0(ALCdevice), ALCenum) : cPtr0(ALCchar) = "mac#"

fun alcGetIntegerv(cPtr0(ALCdevice), ALCenum, ALCsizei, cPtr0(ALCint)) : void = "mac#"

fun alcCaptureOpenDevice(cPtr0(ALCchar), ALCuint, ALCenum, ALCsizei) : cPtr0(ALCdevice) = "mac#"

fun alcCaptureCloseDevice(cPtr0(ALCdevice)) : ALCboolean = "mac#"

fun alcCaptureStart(cPtr0(ALCdevice)) : void = "mac#"

fun alcCaptureStop(cPtr0(ALCdevice)) : void = "mac#"

fun alcCaptureSamples(cPtr0(ALCdevice), cPtr0(ALCvoid), ALCsizei) : void = "mac#"

typedef LPALCCREATECONTEXT = (cPtr0(ALCdevice), cPtr0(ALCint)) -> cPtr0(ALCcontext)

typedef LPALCMAKECONTEXTCURRENT = (cPtr0(ALCcontext)) -> ALCboolean

typedef LPALCPROCESSCONTEXT = (cPtr0(ALCcontext)) -> void

typedef LPALCSUSPENDCONTEXT = (cPtr0(ALCcontext)) -> void

typedef LPALCDESTROYCONTEXT = (cPtr0(ALCcontext)) -> void

typedef LPALCGETCURRENTCONTEXT = () -> cPtr0(ALCcontext)

typedef LPALCGETCONTEXTSDEVICE = (cPtr0(ALCcontext)) -> cPtr0(ALCdevice)

typedef LPALCOPENDEVICE = (cPtr0(ALCchar)) -> cPtr0(ALCdevice)

typedef LPALCCLOSEDEVICE = (cPtr0(ALCdevice)) -> ALCboolean

typedef LPALCGETERROR = (cPtr0(ALCdevice)) -> ALCenum

typedef LPALCISEXTENSIONPRESENT = (cPtr0(ALCdevice), cPtr0(ALCchar)) -> ALCboolean

typedef LPALCGETPROCADDRESS = (cPtr0(ALCdevice), cPtr0(ALCchar)) -> ptr

typedef LPALCGETENUMVALUE = (cPtr0(ALCdevice), cPtr0(ALCchar)) -> ALCenum

typedef LPALCGETSTRING = $extype"LPALCGETSTRING"

typedef LPALCGETINTEGERV = (cPtr0(ALCdevice), ALCenum, ALCsizei, cPtr0(ALCint)) -> void

typedef LPALCCAPTUREOPENDEVICE = (cPtr0(ALCchar), ALCuint, ALCenum, ALCsizei) -> cPtr0(ALCdevice)

typedef LPALCCAPTURECLOSEDEVICE = (cPtr0(ALCdevice)) -> ALCboolean

typedef LPALCCAPTURESTART = (cPtr0(ALCdevice)) -> void

typedef LPALCCAPTURESTOP = (cPtr0(ALCdevice)) -> void

typedef LPALCCAPTURESAMPLES = (cPtr0(ALCdevice), cPtr0(ALCvoid), ALCsizei) -> void

